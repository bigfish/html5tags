interface HTMLCollection {
  readonly attribute unsigned long length;#dom-htmlcollection-length
  caller getter object item(in unsigned long index); #dom-htmlcollection-item
  caller getter object namedItem(in DOMString name); #dom-htmlcollection-nameditem
};
interface HTMLAllCollection : HTMLCollection {#htmlcollection
  #dom-htmlcollection-length
  caller getter object namedItem(in DOMString name); #dom-htmlallcollection-nameditem
  HTMLAllCollection tags(in DOMString tagName);#htmlallcollection
};
interface HTMLFormControlsCollection : HTMLCollection {#htmlcollection
  #dom-htmlcollection-length
  caller getter object namedItem(in DOMString name); #dom-htmlformcontrolscollection-nameditem
};
interface RadioNodeList : NodeList {#nodelist
          attribute DOMString value;#dom-radionodelist-value
};
interface HTMLOptionsCollection : HTMLCollection {#htmlcollection
  #dom-htmlcollection-item
           attribute unsigned long length; #dom-htmloptionscollection-length
  caller getter object namedItem(in DOMString name); #dom-htmloptionscollection-nameditem
  void add(in HTMLElement element, in optional HTMLElement before);#dom-htmloptionscollection-add
  void add(in HTMLElement element, in long before);#dom-htmloptionscollection-add
  void remove(in long index);#dom-htmloptionscollection-remove
};
interface DOMTokenList {
  readonly attribute unsigned long length;#dom-tokenlist-length
  getter DOMString item(in unsigned long index);#dom-tokenlist-item
  boolean contains(in DOMString token);#dom-tokenlist-contains
  void add(in DOMString token);#dom-tokenlist-add
  void remove(in DOMString token);#dom-tokenlist-remove
  boolean toggle(in DOMString token);#dom-tokenlist-toggle
  stringifier DOMString ();#dom-tokenlist-tostring
};
interface DOMSettableTokenList : DOMTokenList {#domtokenlist
            attribute DOMString value;#dom-domsettabletokenlist-value
};
interface DOMStringMap {
  getter DOMString (in DOMString name);
  setter void (in DOMString name, in DOMString value);
  creator void (in DOMString name, in DOMString value);
  deleter void (in DOMString name);
};
interface HTMLDocument {
  #resource-metadata-management
   readonly attribute Location location;#location
  readonly attribute DOMString URL;#dom-document-url
           attribute DOMString domain;#dom-document-domain
  readonly attribute DOMString referrer;#dom-document-referrer
           attribute DOMString cookie;#dom-document-cookie
  readonly attribute DOMString lastModified;#dom-document-lastmodified
  readonly attribute DOMString compatMode;#dom-document-compatmode
           attribute DOMString charset;#dom-document-charset
  readonly attribute DOMString characterSet;#dom-document-characterset
  readonly attribute DOMString defaultCharset;#dom-document-defaultcharset
  readonly attribute DOMString readyState;#dom-document-readystate
  #dom-tree-accessors
  getter any (in DOMString name);#dom-document-nameditem
           attribute DOMString title;#document.title
           attribute DOMString dir;#dom-document-dir
           attribute HTMLElement body;#htmlelement
  readonly attribute HTMLHeadElement head;#htmlheadelement
  readonly attribute HTMLCollection images;#htmlcollection
  readonly attribute HTMLCollection embeds;#htmlcollection
  readonly attribute HTMLCollection plugins;#htmlcollection
  readonly attribute HTMLCollection links;#htmlcollection
  readonly attribute HTMLCollection forms;#htmlcollection
  readonly attribute HTMLCollection scripts;#htmlcollection
  NodeList getElementsByName(in DOMString elementName);#dom-document-getelementsbyname
  NodeList getElementsByClassName(in DOMString classNames);#dom-document-getelementsbyclassname
  #dynamic-markup-insertion
           attribute DOMString innerHTML;#dom-innerhtml
  HTMLDocument open(in optional DOMString type, in optional DOMString replace);#htmldocument
  WindowProxy open(in DOMString url, in DOMString name, in DOMString features, in optional boolean replace);#windowproxy
  void close();#dom-document-close
  void write(in DOMString... text);#dom-document-write
  void writeln(in DOMString... text);#dom-document-writeln
  #editing
  readonly attribute WindowProxy defaultView;#windowproxy
  Selection getSelection();#selection-0
  readonly attribute Element activeElement;#element
  boolean hasFocus();#dom-document-hasfocus
           attribute DOMString designMode;#designMode
  boolean execCommand(in DOMString commandId);#execCommand
  boolean execCommand(in DOMString commandId, in boolean showUI);#execCommand
  boolean execCommand(in DOMString commandId, in boolean showUI, in DOMString value);#execCommand
  boolean queryCommandEnabled(in DOMString commandId);#dom-document-querycommandenabled
  boolean queryCommandIndeterm(in DOMString commandId);#dom-document-querycommandindeterm
  boolean queryCommandState(in DOMString commandId);#dom-document-querycommandstate
  boolean queryCommandSupported(in DOMString commandId);#dom-document-querycommandsupported
  DOMString queryCommandValue(in DOMString commandId);#dom-document-querycommandvalue
  readonly attribute HTMLCollection commands;#htmlcollection
  #event-handler-idl-attributes
           attribute Function onabort;#function
           attribute Function onblur;#function
           attribute Function oncanplay;#function
           attribute Function oncanplaythrough;#function
           attribute Function onchange;#function
           attribute Function onclick;#function
           attribute Function oncontextmenu;#function
           attribute Function ondblclick;#function
           attribute Function ondrag;#function
           attribute Function ondragend;#function
           attribute Function ondragenter;#function
           attribute Function ondragleave;#function
           attribute Function ondragover;#function
           attribute Function ondragstart;#function
           attribute Function ondrop;#function
           attribute Function ondurationchange;#function
           attribute Function onemptied;#function
           attribute Function onended;#function
           attribute Function onerror;#function
           attribute Function onfocus;#function
           attribute Function onformchange;#function
           attribute Function onforminput;#function
           attribute Function oninput;#function
           attribute Function oninvalid;#function
           attribute Function onkeydown;#function
           attribute Function onkeypress;#function
           attribute Function onkeyup;#function
           attribute Function onload;#function
           attribute Function onloadeddata;#function
           attribute Function onloadedmetadata;#function
           attribute Function onloadstart;#function
           attribute Function onmousedown;#function
           attribute Function onmousemove;#function
           attribute Function onmouseout;#function
           attribute Function onmouseover;#function
           attribute Function onmouseup;#function
           attribute Function onmousewheel;#function
           attribute Function onpause;#function
           attribute Function onplay;#function
           attribute Function onplaying;#function
           attribute Function onprogress;#function
           attribute Function onratechange;#function
           attribute Function onreadystatechange;#function
           attribute Function onscroll;#function
           attribute Function onseeked;#function
           attribute Function onseeking;#function
           attribute Function onselect;#function
           attribute Function onshow;#function
           attribute Function onstalled;#function
           attribute Function onsubmit;#function
           attribute Function onsuspend;#function
           attribute Function ontimeupdate;#function
           attribute Function onvolumechange;#function
           attribute Function onwaiting;#function
};
Document implements HTMLDocument;#document
interface DOMHTMLImplementation {
  Document createHTMLDocument(in DOMString title);#document
};
DOMImplementation implements DOMHTMLImplementation;#domimplementation
interface HTMLElement : Element {#element
  #dom-tree-accessors
  NodeList getElementsByClassName(in DOMString classNames);#dom-getelementsbyclassname
  #dynamic-markup-insertion
           attribute DOMString innerHTML;#dom-innerhtml
           attribute DOMString outerHTML;#dom-outerhtml
  void insertAdjacentHTML(in DOMString position, in DOMString text);#dom-insertadjacenthtml
  
           attribute DOMString id;#dom-id
           attribute DOMString title;#dom-title
           attribute DOMString lang;#dom-lang
           attribute DOMString dir;#dom-dir
           attribute DOMString className;#dom-classname
  readonly attribute DOMTokenList classList;#domtokenlist
  readonly attribute DOMStringMap dataset;#domstringmap
  #editing
           attribute boolean hidden;#dom-hidden
  void click();#dom-click
  void scrollIntoView();#dom-scrollintoview
  void scrollIntoView(in boolean top);#dom-scrollintoview
           attribute long tabIndex;#dom-tabindex
  void focus();#dom-focus
  void blur();#dom-blur
           attribute DOMString accessKey;#dom-accesskey
  readonly attribute DOMString accessKeyLabel;#dom-accesskeylabel
           attribute boolean draggable;#dom-draggable
           attribute DOMString contentEditable;#dom-contenteditable
  readonly attribute boolean isContentEditable;#dom-iscontenteditable
           attribute HTMLMenuElement contextMenu;#htmlmenuelement
           attribute DOMString spellcheck;#dom-spellcheck
  #command-api
  readonly attribute DOMString commandType;#dom-command-ro-commandtype
  readonly attribute DOMString label;#dom-command-ro-label
  readonly attribute DOMString icon;#dom-command-ro-icon
  readonly attribute boolean disabled;#dom-command-ro-disabled
  readonly attribute boolean checked;#dom-command-ro-checked
  
  readonly attribute CSSStyleDeclaration style;#dom-style
  #event-handler-idl-attributes
           attribute Function onabort;#function
           attribute Function onblur;#function
           attribute Function oncanplay;#function
           attribute Function oncanplaythrough;#function
           attribute Function onchange;#function
           attribute Function onclick;#function
           attribute Function oncontextmenu;#function
           attribute Function ondblclick;#function
           attribute Function ondrag;#function
           attribute Function ondragend;#function
           attribute Function ondragenter;#function
           attribute Function ondragleave;#function
           attribute Function ondragover;#function
           attribute Function ondragstart;#function
           attribute Function ondrop;#function
           attribute Function ondurationchange;#function
           attribute Function onemptied;#function
           attribute Function onended;#function
           attribute Function onerror;#function
           attribute Function onfocus;#function
           attribute Function onformchange;#function
           attribute Function onforminput;#function
           attribute Function oninput;#function
           attribute Function oninvalid;#function
           attribute Function onkeydown;#function
           attribute Function onkeypress;#function
           attribute Function onkeyup;#function
           attribute Function onload;#function
           attribute Function onloadeddata;#function
           attribute Function onloadedmetadata;#function
           attribute Function onloadstart;#function
           attribute Function onmousedown;#function
           attribute Function onmousemove;#function
           attribute Function onmouseout;#function
           attribute Function onmouseover;#function
           attribute Function onmouseup;#function
           attribute Function onmousewheel;#function
           attribute Function onpause;#function
           attribute Function onplay;#function
           attribute Function onplaying;#function
           attribute Function onprogress;#function
           attribute Function onratechange;#function
           attribute Function onreadystatechange;#function
           attribute Function onscroll;#function
           attribute Function onseeked;#function
           attribute Function onseeking;#function
           attribute Function onselect;#function
           attribute Function onshow;#function
           attribute Function onstalled;#function
           attribute Function onsubmit;#function
           attribute Function onsuspend;#function
           attribute Function ontimeupdate;#function
           attribute Function onvolumechange;#function
           attribute Function onwaiting;#function
};
interface HTMLUnknownElement : HTMLElement { };#htmlelement
interface HTMLHtmlElement : HTMLElement {};#htmlelement
interface HTMLHeadElement : HTMLElement {};#htmlelement
interface HTMLTitleElement : HTMLElement {#htmlelement
           attribute DOMString text;#dom-title-text
};
interface HTMLBaseElement : HTMLElement {#htmlelement
           attribute DOMString href;#dom-base-href
           attribute DOMString target;#dom-base-target
};
interface HTMLLinkElement : HTMLElement {#htmlelement
           attribute boolean disabled;#dom-link-disabled
           attribute DOMString href;#dom-link-href
           attribute DOMString rel;#dom-link-rel
  readonly attribute DOMTokenList relList;#domtokenlist
           attribute DOMString media;#dom-link-media
           attribute DOMString hreflang;#dom-link-hreflang
           attribute DOMString type;#dom-link-type
   readonly attribute DOMSettableTokenList sizes;#domsettabletokenlist
};
HTMLLinkElement implements LinkStyle;#htmllinkelement
interface HTMLMetaElement : HTMLElement {#htmlelement
           attribute DOMString name;#dom-meta-name
           attribute DOMString httpEquiv;#dom-meta-httpequiv
           attribute DOMString content;#dom-meta-content
};
interface HTMLStyleElement : HTMLElement {#htmlelement
           attribute boolean disabled;#dom-style-disabled
           attribute DOMString media;#dom-style-media
           attribute DOMString type;#dom-style-type
           attribute boolean scoped;#dom-style-scoped
};
HTMLStyleElement implements LinkStyle;#htmlstyleelement
interface HTMLScriptElement : HTMLElement {#htmlelement
           attribute DOMString src;#dom-script-src
           attribute boolean async;#dom-script-async
           attribute boolean defer;#dom-script-defer
           attribute DOMString type;#dom-script-type
           attribute DOMString charset;#dom-script-charset
           attribute DOMString text;#dom-script-text
};
interface HTMLBodyElement : HTMLElement {#htmlelement
           attribute Function onafterprint;#function
           attribute Function onbeforeprint;#function
           attribute Function onbeforeunload;#function
           attribute Function onblur;#function
           attribute Function onerror;#function
           attribute Function onfocus;#function
           attribute Function onhashchange;#function
           attribute Function onload;#function
           attribute Function onmessage;#function
           attribute Function onoffline;#function
           attribute Function ononline;#function
           attribute Function onpopstate;#function
           attribute Function onpagehide;#function
           attribute Function onpageshow;#function
           attribute Function onredo;#function
           attribute Function onresize;#function
           attribute Function onstorage;#function
           attribute Function onundo;#function
           attribute Function onunload;#function
};
interface HTMLHeadingElement : HTMLElement {};#htmlelement
interface HTMLParagraphElement : HTMLElement {};#htmlelement
interface HTMLHRElement : HTMLElement {};#htmlelement
interface HTMLPreElement : HTMLElement {};#htmlelement
interface HTMLQuoteElement : HTMLElement {#htmlelement
           attribute DOMString cite;#dom-quote-cite
};
interface HTMLOListElement : HTMLElement {#htmlelement
           attribute boolean reversed;#dom-ol-reversed
           attribute long start;#dom-ol-start
};
interface HTMLUListElement : HTMLElement {};#htmlelement
interface HTMLLIElement : HTMLElement {#htmlelement
           attribute long value;#dom-li-value
};
interface HTMLDListElement : HTMLElement {};#htmlelement
interface HTMLDivElement : HTMLElement {};#htmlelement
interface HTMLAnchorElement : HTMLElement {#htmlelement
  stringifier attribute DOMString href;#dom-a-href
           attribute DOMString target;#dom-a-target
           attribute DOMString rel;#dom-a-rel
  readonly attribute DOMTokenList relList;#domtokenlist
           attribute DOMString media;#dom-a-media
           attribute DOMString hreflang;#dom-a-hreflang
           attribute DOMString type;#dom-a-type
           attribute DOMString text;#dom-a-text
  #url-decomposition-idl-attributes
           attribute DOMString protocol;#dom-a-protocol
           attribute DOMString host;#dom-a-host
           attribute DOMString hostname;#dom-a-hostname
           attribute DOMString port;#dom-a-port
           attribute DOMString pathname;#dom-a-pathname
           attribute DOMString search;#dom-a-search
           attribute DOMString hash;#dom-a-hash
};
interface HTMLTimeElement : HTMLElement {#htmlelement
           attribute DOMString dateTime;#dom-time-datetime
           attribute boolean pubDate;#dom-time-pubdate
  readonly attribute Date valueAsDate;#dom-time-valueasdate
};
interface HTMLSpanElement : HTMLElement {};#htmlelement
interface HTMLBRElement : HTMLElement {};#htmlelement
interface HTMLModElement : HTMLElement {#htmlelement
           attribute DOMString cite;#dom-mod-cite
           attribute DOMString dateTime;#dom-mod-datetime
};
[NamedConstructor=Image(),#dom-image
 NamedConstructor=Image(in unsigned long width),#dom-image-w
 NamedConstructor=Image(in unsigned long width, in unsigned long height)]#dom-image-wh
interface HTMLImageElement : HTMLElement {#htmlelement
           attribute DOMString alt;#dom-img-alt
           attribute DOMString src;#dom-img-src
           attribute DOMString useMap;#dom-img-usemap
           attribute boolean isMap;#dom-img-ismap
           attribute unsigned long width;#dom-img-width
           attribute unsigned long height;#dom-img-height
  readonly attribute unsigned long naturalWidth;#dom-img-naturalwidth
  readonly attribute unsigned long naturalHeight;#dom-img-naturalheight
  readonly attribute boolean complete;#dom-img-complete
};
interface HTMLIFrameElement : HTMLElement {#htmlelement
           attribute DOMString src;#dom-iframe-src
           attribute DOMString srcdoc;#dom-iframe-srcdoc
           attribute DOMString name;#dom-iframe-name
   readonly attribute DOMSettableTokenList sandbox;#domsettabletokenlist
           attribute boolean seamless;#dom-iframe-seamless
           attribute DOMString width;#dom-dim-width
           attribute DOMString height;#dom-dim-height
  readonly attribute Document contentDocument;#dom-iframe-contentdocument
  readonly attribute WindowProxy contentWindow;#windowproxy
};
interface HTMLEmbedElement : HTMLElement {#htmlelement
           attribute DOMString src;#dom-embed-src
           attribute DOMString type;#dom-embed-type
           attribute DOMString width;#dom-dim-width
           attribute DOMString height;#dom-dim-height
};
interface HTMLObjectElement : HTMLElement {#htmlelement
           attribute DOMString data;#dom-object-data
           attribute DOMString type;#dom-object-type
           attribute DOMString name;#dom-object-name
           attribute DOMString useMap;#dom-object-usemap
  readonly attribute HTMLFormElement form;#htmlformelement
           attribute DOMString width;#dom-dim-width
           attribute DOMString height;#dom-dim-height
  readonly attribute Document contentDocument;#dom-object-contentdocument
  readonly attribute WindowProxy contentWindow;#windowproxy
  readonly attribute boolean willValidate;#dom-cva-willvalidate
  readonly attribute ValidityState validity;#validitystate
  readonly attribute DOMString validationMessage;#dom-cva-validationmessage
  boolean checkValidity();#dom-cva-checkvalidatity
  void setCustomValidity(in DOMString error);#dom-cva-setcustomvalidity
};
interface HTMLParamElement : HTMLElement {#htmlelement
           attribute DOMString name;#dom-param-name
           attribute DOMString value;#dom-param-value
};
interface HTMLVideoElement : HTMLMediaElement {#htmlmediaelement
           attribute DOMString width;#dom-dim-width
           attribute DOMString height;#dom-dim-height
  readonly attribute unsigned long videoWidth;#dom-video-videowidth
  readonly attribute unsigned long videoHeight;#dom-video-videoheight
           attribute DOMString poster;#dom-video-poster
};
[NamedConstructor=Audio(),#dom-audio
 NamedConstructor=Audio(in DOMString src)]#dom-audio-s
interface HTMLAudioElement : HTMLMediaElement {};#htmlmediaelement
interface HTMLSourceElement : HTMLElement {#htmlelement
           attribute DOMString src;#dom-source-src
           attribute DOMString type;#dom-source-type
           attribute DOMString media;#dom-source-media
};
interface HTMLMediaElement : HTMLElement {#htmlelement
  
  readonly attribute MediaError error;#mediaerror
  
           attribute DOMString src;#dom-media-src
  readonly attribute DOMString currentSrc;#dom-media-currentsrc
  const unsigned short NETWORK_EMPTY = 0;#dom-media-network_empty
  const unsigned short NETWORK_IDLE = 1;#dom-media-network_idle
  const unsigned short NETWORK_LOADING = 2;#dom-media-network_loading
  const unsigned short NETWORK_NO_SOURCE = 3;#dom-media-network_no_source
  readonly attribute unsigned short networkState;#dom-media-networkstate
           attribute DOMString preload;#dom-media-preload
  readonly attribute TimeRanges buffered;#timeranges
  void load();#dom-media-load
  DOMString canPlayType(in DOMString type);#dom-navigator-canplaytype
  
  const unsigned short HAVE_NOTHING = 0;#dom-media-have_nothing
  const unsigned short HAVE_METADATA = 1;#dom-media-have_metadata
  const unsigned short HAVE_CURRENT_DATA = 2;#dom-media-have_current_data
  const unsigned short HAVE_FUTURE_DATA = 3;#dom-media-have_future_data
  const unsigned short HAVE_ENOUGH_DATA = 4;#dom-media-have_enough_data
  readonly attribute unsigned short readyState;#dom-media-readystate
  readonly attribute boolean seeking;#dom-media-seeking
  
           attribute float currentTime;#dom-media-currenttime
  readonly attribute float startTime;#dom-media-starttime
  readonly attribute float duration;#dom-media-duration
  readonly attribute boolean paused;#dom-media-paused
           attribute float defaultPlaybackRate;#dom-media-defaultplaybackrate
           attribute float playbackRate;#dom-media-playbackrate
  readonly attribute TimeRanges played;#timeranges
  readonly attribute TimeRanges seekable;#timeranges
  readonly attribute boolean ended;#dom-media-ended
           attribute boolean autoplay;#dom-media-autoplay
           attribute boolean loop;#dom-media-loop
  void play();#dom-media-play
  void pause();#dom-media-pause
  
           attribute boolean controls;#dom-media-controls
           attribute float volume;#dom-media-volume
           attribute boolean muted;#dom-media-muted
};
interface MediaError {
  const unsigned short MEDIA_ERR_ABORTED = 1;#dom-mediaerror-media_err_aborted
  const unsigned short MEDIA_ERR_NETWORK = 2;#dom-mediaerror-media_err_network
  const unsigned short MEDIA_ERR_DECODE = 3;#dom-mediaerror-media_err_decode
  const unsigned short MEDIA_ERR_SRC_NOT_SUPPORTED = 4;#dom-mediaerror-media_err_src_not_supported
  readonly attribute unsigned short code;#dom-mediaerror-code
};
interface TimeRanges {
  readonly attribute unsigned long length;#dom-timeranges-length
  float start(in unsigned long index);#dom-timeranges-start
  float end(in unsigned long index);#dom-timeranges-end
};
interface HTMLCanvasElement : HTMLElement {#htmlelement
           attribute unsigned long width;#dom-canvas-width
           attribute unsigned long height;#dom-canvas-height
  DOMString toDataURL(in optional DOMString type, in any... args);#dom-canvas-todataurl
  object getContext(in DOMString contextId);#dom-canvas-getcontext
};
interface HTMLMapElement : HTMLElement {#htmlelement
           attribute DOMString name;#dom-map-name
  readonly attribute HTMLCollection areas;#htmlcollection
  readonly attribute HTMLCollection images;#htmlcollection
};
interface HTMLAreaElement : HTMLElement {#htmlelement
           attribute DOMString alt;#dom-area-alt
           attribute DOMString coords;#dom-area-coords
           attribute DOMString shape;#dom-area-shape
  stringifier attribute DOMString href;#dom-area-href
           attribute DOMString target;#dom-area-target
           attribute DOMString rel;#dom-area-rel
  readonly attribute DOMTokenList relList;#domtokenlist
           attribute DOMString media;#dom-area-media
           attribute DOMString hreflang;#dom-area-hreflang
           attribute DOMString type;#dom-area-type
  #url-decomposition-idl-attributes
           attribute DOMString protocol;#dom-area-protocol
           attribute DOMString host;#dom-area-host
           attribute DOMString hostname;#dom-area-hostname
           attribute DOMString port;#dom-area-port
           attribute DOMString pathname;#dom-area-pathname
           attribute DOMString search;#dom-area-search
           attribute DOMString hash;#dom-area-hash
};
interface HTMLTableElement : HTMLElement {#htmlelement
           attribute HTMLTableCaptionElement caption;#htmltablecaptionelement
  HTMLElement createCaption();#htmlelement
  void deleteCaption();#dom-table-deletecaption
           attribute HTMLTableSectionElement tHead;#htmltablesectionelement
  HTMLElement createTHead();#htmlelement
  void deleteTHead();#dom-table-deletethead
           attribute HTMLTableSectionElement tFoot;#htmltablesectionelement
  HTMLElement createTFoot();#htmlelement
  void deleteTFoot();#dom-table-deletetfoot
  readonly attribute HTMLCollection tBodies;#htmlcollection
  HTMLElement createTBody();#htmlelement
  readonly attribute HTMLCollection rows;#htmlcollection
  HTMLElement insertRow(in optional long index);#htmlelement
  void deleteRow(in long index);#dom-table-deleterow
           attribute DOMString summary;#dom-table-summary
};
interface HTMLTableCaptionElement : HTMLElement {};#htmlelement
interface HTMLTableColElement : HTMLElement {#htmlelement
           attribute unsigned long span;#dom-colgroup-span
};
interface HTMLTableSectionElement : HTMLElement {#htmlelement
  readonly attribute HTMLCollection rows;#htmlcollection
  HTMLElement insertRow(in optional long index);#htmlelement
  void deleteRow(in long index);#dom-tbody-deleterow
};
interface HTMLTableRowElement : HTMLElement {#htmlelement
  readonly attribute long rowIndex;#dom-tr-rowindex
  readonly attribute long sectionRowIndex;#dom-tr-sectionrowindex
  readonly attribute HTMLCollection cells;#htmlcollection
  HTMLElement insertCell(in optional long index);#htmlelement
  void deleteCell(in long index);#dom-tr-deletecell
};
interface HTMLTableDataCellElement : HTMLTableCellElement {};#htmltablecellelement
interface HTMLTableHeaderCellElement : HTMLTableCellElement {#htmltablecellelement
           attribute DOMString scope;#dom-th-scope
};
interface HTMLTableCellElement : HTMLElement {#htmlelement
           attribute unsigned long colSpan;#dom-tdth-colspan
           attribute unsigned long rowSpan;#dom-tdth-rowspan
   readonly attribute DOMSettableTokenList headers;#domsettabletokenlist
  readonly attribute long cellIndex;#dom-tdth-cellindex
};
interface HTMLFormElement : HTMLElement {#htmlelement
           attribute DOMString acceptCharset;#dom-form-acceptcharset
           attribute DOMString action;#dom-fs-action
           attribute DOMString autocomplete;#dom-form-autocomplete
           attribute DOMString enctype;#dom-fs-enctype
           attribute DOMString method;#dom-fs-method
           attribute DOMString name;#dom-form-name
           attribute boolean noValidate;#dom-fs-novalidate
           attribute DOMString target;#dom-fs-target
  readonly attribute HTMLFormControlsCollection elements;#htmlformcontrolscollection
  readonly attribute long length;#dom-form-length
  caller getter any item(in unsigned long index);#dom-form-item
  caller getter any namedItem(in DOMString name);#dom-form-nameditem
  void submit();#dom-form-submit
  void reset();#dom-form-reset
  boolean checkValidity();#dom-form-checkvalidity
  void dispatchFormInput();#dom-form-dispatchforminput
  void dispatchFormChange();#dom-form-dispatchformchange
};
interface HTMLFieldSetElement : HTMLElement {#htmlelement
           attribute boolean disabled;#dom-fieldset-disabled
  readonly attribute HTMLFormElement form;#htmlformelement
           attribute DOMString name;#dom-fe-name
  readonly attribute DOMString type;#dom-fieldset-type
  readonly attribute HTMLFormControlsCollection elements;#htmlformcontrolscollection
  readonly attribute boolean willValidate;#dom-cva-willvalidate
  readonly attribute ValidityState validity;#validitystate
  readonly attribute DOMString validationMessage;#dom-cva-validationmessage
  boolean checkValidity();#dom-cva-checkvalidatity
  void setCustomValidity(in DOMString error);#dom-cva-setcustomvalidity
};
interface HTMLLegendElement : HTMLElement {#htmlelement
  readonly attribute HTMLFormElement form;#htmlformelement
};
interface HTMLLabelElement : HTMLElement {#htmlelement
  readonly attribute HTMLFormElement form;#htmlformelement
           attribute DOMString htmlFor;#dom-label-htmlfor
  readonly attribute HTMLElement control;#htmlelement
};
interface HTMLInputElement : HTMLElement {#htmlelement
           attribute DOMString accept;#dom-input-accept
           attribute DOMString alt;#dom-input-alt
           attribute DOMString autocomplete;#dom-input-autocomplete
           attribute boolean autofocus;#dom-fe-autofocus
           attribute boolean defaultChecked;#dom-input-defaultchecked
           attribute boolean checked;#dom-input-checked
           attribute boolean disabled;#dom-fe-disabled
  readonly attribute HTMLFormElement form;#htmlformelement
  readonly attribute FileList files;#dom-input-files
           attribute DOMString formAction;#dom-fs-formaction
           attribute DOMString formEnctype;#dom-fs-formenctype
           attribute DOMString formMethod;#dom-fs-formmethod
           attribute boolean formNoValidate;#dom-fs-formnovalidate
           attribute DOMString formTarget;#dom-fs-formtarget
           attribute DOMString height;#dom-dim-height
           attribute boolean indeterminate;#dom-input-indeterminate
  readonly attribute HTMLElement list;#htmlelement
           attribute DOMString max;#dom-input-max
           attribute long maxLength;#dom-input-maxlength
           attribute DOMString min;#dom-input-min
           attribute boolean multiple;#dom-input-multiple
           attribute DOMString name;#dom-fe-name
           attribute DOMString pattern;#dom-input-pattern
           attribute DOMString placeholder;#dom-input-placeholder
           attribute boolean readOnly;#dom-input-readonly
           attribute boolean required;#dom-input-required
           attribute unsigned long size;#dom-input-size
           attribute DOMString src;#dom-input-src
           attribute DOMString step;#dom-input-step
           attribute DOMString type;#dom-input-type
           attribute DOMString defaultValue;#dom-input-defaultvalue
           attribute DOMString value;#dom-input-value
           attribute Date valueAsDate;#dom-input-valueasdate
           attribute double valueAsNumber;#dom-input-valueasnumber
  readonly attribute HTMLOptionElement selectedOption;#htmloptionelement
           attribute DOMString width;#dom-dim-width
  void stepUp(in optional long n);#dom-input-stepup
  void stepDown(in optional long n);#dom-input-stepdown
  readonly attribute boolean willValidate;#dom-cva-willvalidate
  readonly attribute ValidityState validity;#validitystate
  readonly attribute DOMString validationMessage;#dom-cva-validationmessage
  boolean checkValidity();#dom-cva-checkvalidatity
  void setCustomValidity(in DOMString error);#dom-cva-setcustomvalidity
  readonly attribute NodeList labels;#nodelist
  void select();#dom-textarea-input-select
           attribute unsigned long selectionStart;#dom-textarea-input-selectionstart
           attribute unsigned long selectionEnd;#dom-textarea-input-selectionend
  void setSelectionRange(in unsigned long start, in unsigned long end);#dom-textarea-input-setselectionrange
};
interface HTMLButtonElement : HTMLElement {#htmlelement
           attribute boolean autofocus;#dom-fe-autofocus
           attribute boolean disabled;#dom-fe-disabled
  readonly attribute HTMLFormElement form;#htmlformelement
           attribute DOMString formAction;#dom-fs-formaction
           attribute DOMString formEnctype;#dom-fs-formenctype
           attribute DOMString formMethod;#dom-fs-formmethod
           attribute DOMString formNoValidate;#dom-fs-formnovalidate
           attribute DOMString formTarget;#dom-fs-formtarget
           attribute DOMString name;#dom-fe-name
           attribute DOMString type;#dom-button-type
           attribute DOMString value;#dom-button-value
  readonly attribute boolean willValidate;#dom-cva-willvalidate
  readonly attribute ValidityState validity;#validitystate
  readonly attribute DOMString validationMessage;#dom-cva-validationmessage
  boolean checkValidity();#dom-cva-checkvalidatity
  void setCustomValidity(in DOMString error);#dom-cva-setcustomvalidity
  readonly attribute NodeList labels;#nodelist
};
interface HTMLSelectElement : HTMLElement {#htmlelement
           attribute boolean autofocus;#dom-fe-autofocus
           attribute boolean disabled;#dom-fe-disabled
  readonly attribute HTMLFormElement form;#htmlformelement
           attribute boolean multiple;#dom-select-multiple
           attribute DOMString name;#dom-fe-name
           attribute unsigned long size;#dom-select-size
  readonly attribute DOMString type;#dom-select-type
  readonly attribute HTMLOptionsCollection options;#htmloptionscollection
           attribute unsigned long length;#dom-select-length
  caller getter any item(in unsigned long index);#dom-select-item
  caller getter any namedItem(in DOMString name);#dom-select-nameditem
  void add(in HTMLElement element, in optional HTMLElement before);#dom-select-add
  void add(in HTMLElement element, in long before);#dom-select-add
  void remove(in long index);#dom-select-remove
  readonly attribute HTMLCollection selectedOptions;#htmlcollection
           attribute long selectedIndex;#dom-select-selectedindex
           attribute DOMString value;#dom-select-value
  readonly attribute boolean willValidate;#dom-cva-willvalidate
  readonly attribute ValidityState validity;#validitystate
  readonly attribute DOMString validationMessage;#dom-cva-validationmessage
  boolean checkValidity();#dom-cva-checkvalidatity
  void setCustomValidity(in DOMString error);#dom-cva-setcustomvalidity
  readonly attribute NodeList labels;#nodelist
};
interface HTMLDataListElement : HTMLElement {#htmlelement
  readonly attribute HTMLCollection options;#htmlcollection
};
interface HTMLOptGroupElement : HTMLElement {#htmlelement
           attribute boolean disabled;#dom-optgroup-disabled
           attribute DOMString label;#dom-optgroup-label
};
[NamedConstructor=Option(),#dom-option
 NamedConstructor=Option(in DOMString text),#dom-option-t
 NamedConstructor=Option(in DOMString text, in DOMString value),#dom-option-tv
 NamedConstructor=Option(in DOMString text, in DOMString value, in boolean defaultSelected),#dom-option-tvd
 NamedConstructor=Option(in DOMString text, in DOMString value, in boolean defaultSelected, in boolean selected)]#dom-option-tvds
interface HTMLOptionElement : HTMLElement {#htmlelement
           attribute boolean disabled;#dom-option-disabled
  readonly attribute HTMLFormElement form;#htmlformelement
           attribute DOMString label;#dom-option-label
           attribute boolean defaultSelected;#dom-option-defaultselected
           attribute boolean selected;#dom-option-selected
           attribute DOMString value;#dom-option-value
           attribute DOMString text;#dom-option-text
  readonly attribute long index;#dom-option-index
};
interface HTMLTextAreaElement : HTMLElement {#htmlelement
           attribute boolean autofocus;#dom-fe-autofocus
           attribute unsigned long cols;#dom-textarea-cols
           attribute boolean disabled;#dom-fe-disabled
  readonly attribute HTMLFormElement form;#htmlformelement
           attribute long maxLength;#dom-textarea-maxlength
           attribute DOMString name;#dom-fe-name
           attribute DOMString placeholder;#dom-textarea-placeholder
           attribute boolean readOnly;#dom-textarea-readonly
           attribute boolean required;#dom-textarea-required
           attribute unsigned long rows;#dom-textarea-rows
           attribute DOMString wrap;#dom-textarea-wrap
  readonly attribute DOMString type;#dom-textarea-type
           attribute DOMString defaultValue;#dom-textarea-defaultvalue
           attribute DOMString value;#dom-textarea-value
  readonly attribute unsigned long textLength;#dom-textarea-textlength
  readonly attribute boolean willValidate;#dom-cva-willvalidate
  readonly attribute ValidityState validity;#validitystate
  readonly attribute DOMString validationMessage;#dom-cva-validationmessage
  boolean checkValidity();#dom-cva-checkvalidatity
  void setCustomValidity(in DOMString error);#dom-cva-setcustomvalidity
  readonly attribute NodeList labels;#nodelist
  void select();#dom-textarea-input-select
           attribute unsigned long selectionStart;#dom-textarea-input-selectionstart
           attribute unsigned long selectionEnd;#dom-textarea-input-selectionend
  void setSelectionRange(in unsigned long start, in unsigned long end);#dom-textarea-input-setselectionrange
};
interface HTMLKeygenElement : HTMLElement {#htmlelement
           attribute boolean autofocus;#dom-fe-autofocus
           attribute DOMString challenge;#dom-keygen-challenge
           attribute boolean disabled;#dom-fe-disabled
  readonly attribute HTMLFormElement form;#htmlformelement
           attribute DOMString keytype;#dom-keygen-keytype
           attribute DOMString name;#dom-fe-name
  readonly attribute DOMString type;#dom-keygen-type
  readonly attribute boolean willValidate;#dom-cva-willvalidate
  readonly attribute ValidityState validity;#validitystate
  readonly attribute DOMString validationMessage;#dom-cva-validationmessage
  boolean checkValidity();#dom-cva-checkvalidatity
  void setCustomValidity(in DOMString error);#dom-cva-setcustomvalidity
  readonly attribute NodeList labels;#nodelist
};
interface HTMLOutputElement : HTMLElement {#htmlelement
   readonly attribute DOMSettableTokenList htmlFor;#domsettabletokenlist
  readonly attribute HTMLFormElement form;#htmlformelement
           attribute DOMString name;#dom-fe-name
  readonly attribute DOMString type;#dom-output-type
           attribute DOMString defaultValue;#dom-output-defaultvalue
           attribute DOMString value;#dom-output-value
  readonly attribute boolean willValidate;#dom-cva-willvalidate
  readonly attribute ValidityState validity;#validitystate
  readonly attribute DOMString validationMessage;#dom-cva-validationmessage
  boolean checkValidity();#dom-cva-checkvalidatity
  void setCustomValidity(in DOMString error);#dom-cva-setcustomvalidity
  readonly attribute NodeList labels;#nodelist
};
interface HTMLProgressElement : HTMLElement {#htmlelement
           attribute float value;#dom-progress-value
           attribute float max;#dom-progress-max
  readonly attribute float position;#dom-progress-position
  readonly attribute HTMLFormElement form;#htmlformelement
  readonly attribute NodeList labels;#nodelist
};
interface HTMLMeterElement : HTMLElement {#htmlelement
           attribute float value;#dom-meter-value
           attribute float min;#dom-meter-min
           attribute float max;#dom-meter-max
           attribute float low;#dom-meter-low
           attribute float high;#dom-meter-high
           attribute float optimum;#dom-meter-optimum
  readonly attribute HTMLFormElement form;#htmlformelement
  readonly attribute NodeList labels;#nodelist
};
interface ValidityState {
  readonly attribute boolean valueMissing;#dom-validitystate-valuemissing
  readonly attribute boolean typeMismatch;#dom-validitystate-typemismatch
  readonly attribute boolean patternMismatch;#dom-validitystate-patternmismatch
  readonly attribute boolean tooLong;#dom-validitystate-toolong
  readonly attribute boolean rangeUnderflow;#dom-validitystate-rangeunderflow
  readonly attribute boolean rangeOverflow;#dom-validitystate-rangeoverflow
  readonly attribute boolean stepMismatch;#dom-validitystate-stepmismatch
  readonly attribute boolean customError;#dom-validitystate-customerror
  readonly attribute boolean valid;#dom-validitystate-valid
};
interface HTMLDetailsElement : HTMLElement {#htmlelement
           attribute boolean open;#dom-details-open
};
interface HTMLCommandElement : HTMLElement {#htmlelement
           attribute DOMString type;#dom-command-type
           attribute DOMString label;#dom-command-label
           attribute DOMString icon;#dom-command-icon
           attribute boolean disabled;#dom-command-disabled
           attribute boolean checked;#dom-command-checked
           attribute DOMString radiogroup;#dom-command-radiogroup
};
interface HTMLMenuElement : HTMLElement {#htmlelement
           attribute DOMString type;#dom-menu-type
           attribute DOMString label;#dom-menu-label
};
 
interface Window {
  
  readonly attribute WindowProxy window;#windowproxy
  readonly attribute WindowProxy self;#windowproxy
  readonly attribute Document document;#document
           attribute DOMString name;#dom-name
   readonly attribute Location location;#location
  readonly attribute History history;#history-0
  readonly attribute UndoManager undoManager;#undomanager
  Selection getSelection();#selection-0
   readonly attribute BarProp locationbar;#barprop
   readonly attribute BarProp menubar;#barprop
   readonly attribute BarProp personalbar;#barprop
   readonly attribute BarProp scrollbars;#barprop
   readonly attribute BarProp statusbar;#barprop
   readonly attribute BarProp toolbar;#barprop
  void close();#dom-window-close
  void stop();#dom-window-stop
  void focus();#dom-window-focus
  void blur();#dom-window-blur
  
   readonly attribute WindowProxy frames;#windowproxy
   readonly attribute unsigned long length;#dom-length
  readonly attribute WindowProxy top;#windowproxy
   readonly attribute WindowProxy opener;#windowproxy
  readonly attribute WindowProxy parent;#windowproxy
  readonly attribute Element frameElement;#element
  WindowProxy open(in optional DOMString url, in optional DOMString target, in optional DOMString features, in optional DOMString replace);#windowproxy
  getter WindowProxy (in unsigned long index);#dom-window-item
  getter any (in DOMString name);#dom-window-nameditem
  
  readonly attribute Navigator navigator; #navigator
  readonly attribute ApplicationCache applicationCache;#applicationcache
  
  void alert(in DOMString message);#dom-alert
  boolean confirm(in DOMString message);#dom-confirm
  DOMString prompt(in DOMString message, in optional DOMString default);#dom-prompt
  void print();#dom-print
  any showModalDialog(in DOMString url, in optional any argument);#dom-showmodaldialog
  #event-handler-idl-attributes
           attribute Function onabort;#function
           attribute Function onafterprint;#function
           attribute Function onbeforeprint;#function
           attribute Function onbeforeunload;#function
           attribute Function onblur;#function
           attribute Function oncanplay;#function
           attribute Function oncanplaythrough;#function
           attribute Function onchange;#function
           attribute Function onclick;#function
           attribute Function oncontextmenu;#function
           attribute Function ondblclick;#function
           attribute Function ondrag;#function
           attribute Function ondragend;#function
           attribute Function ondragenter;#function
           attribute Function ondragleave;#function
           attribute Function ondragover;#function
           attribute Function ondragstart;#function
           attribute Function ondrop;#function
           attribute Function ondurationchange;#function
           attribute Function onemptied;#function
           attribute Function onended;#function
           attribute Function onerror;#function
           attribute Function onfocus;#function
           attribute Function onformchange;#function
           attribute Function onforminput;#function
           attribute Function onhashchange;#function
           attribute Function oninput;#function
           attribute Function oninvalid;#function
           attribute Function onkeydown;#function
           attribute Function onkeypress;#function
           attribute Function onkeyup;#function
           attribute Function onload;#function
           attribute Function onloadeddata;#function
           attribute Function onloadedmetadata;#function
           attribute Function onloadstart;#function
           attribute Function onmessage;#function
           attribute Function onmousedown;#function
           attribute Function onmousemove;#function
           attribute Function onmouseout;#function
           attribute Function onmouseover;#function
           attribute Function onmouseup;#function
           attribute Function onmousewheel;#function
           attribute Function onoffline;#function
           attribute Function ononline;#function
           attribute Function onpause;#function
           attribute Function onplay;#function
           attribute Function onplaying;#function
           attribute Function onpagehide;#function
           attribute Function onpageshow;#function
           attribute Function onpopstate;#function
           attribute Function onprogress;#function
           attribute Function onratechange;#function
           attribute Function onreadystatechange;#function
           attribute Function onredo;#function
           attribute Function onresize;#function
           attribute Function onscroll;#function
           attribute Function onseeked;#function
           attribute Function onseeking;#function
           attribute Function onselect;#function
           attribute Function onshow;#function
           attribute Function onstalled;#function
           attribute Function onstorage;#function
           attribute Function onsubmit;#function
           attribute Function onsuspend;#function
           attribute Function ontimeupdate;#function
           attribute Function onundo;#function
           attribute Function onunload;#function
           attribute Function onvolumechange;#function
           attribute Function onwaiting;#function
};
Window implements EventTarget;#window
interface BarProp {
           attribute boolean visible;#dom-barprop-visible
};
interface History {
  readonly attribute long length;#dom-history-length
  void go(in optional long delta);#dom-history-go
  void back();#dom-history-back
  void forward();#dom-history-forward
  void pushState(in any data, in DOMString title, in optional DOMString url);#dom-history-pushstate
  void replaceState(in any data, in DOMString title, in optional DOMString url);#dom-history-replacestate
};
interface Location {
  stringifier attribute DOMString href;#dom-location-href
  void assign(in DOMString url);#dom-location-assign
  void replace(in DOMString url);#dom-location-replace
  void reload();#dom-location-reload
  #url-decomposition-idl-attributes
           attribute DOMString protocol;#dom-location-protocol
           attribute DOMString host;#dom-location-host
           attribute DOMString hostname;#dom-location-hostname
           attribute DOMString port;#dom-location-port
           attribute DOMString pathname;#dom-location-pathname
           attribute DOMString search;#dom-location-search
           attribute DOMString hash;#dom-location-hash
  
  DOMString resolveURL(in DOMString url);#dom-location-resolveurl
};
interface PopStateEvent : Event {#event
  readonly attribute any state;#dom-popstateevent-state
  void initPopStateEvent(in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in any stateArg);#dom-popstateevent-initpopstateevent
};
interface HashChangeEvent : Event {#event
  readonly attribute any oldURL;#dom-hashchangeevent-oldurl
  readonly attribute any newURL;#dom-hashchangeevent-newurl
  void initHashChangeEvent(in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in DOMString oldURLArg, in DOMString newURLArg);#dom-hashchangeevent-inithashchangeevent
};
interface PageTransitionEvent : Event {#event
  readonly attribute any persisted;#dom-pagetransitionevent-persisted
  void initPageTransitionEvent(in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in any persistedArg);#dom-pagetransitionevent-initpagetransitionevent
};
interface BeforeUnloadEvent : Event {#event
           attribute DOMString returnValue;#dom-beforeunloadevent-returnvalue
};
interface ApplicationCache {
  #concept-appcache-status
  const unsigned short UNCACHED = 0;#dom-appcache-uncached
  const unsigned short IDLE = 1;#dom-appcache-idle
  const unsigned short CHECKING = 2;#dom-appcache-checking
  const unsigned short DOWNLOADING = 3;#dom-appcache-downloading
  const unsigned short UPDATEREADY = 4;#dom-appcache-updateready
  const unsigned short OBSOLETE = 5;#dom-appcache-obsolete
  readonly attribute unsigned short status;#dom-appcache-status
  
  void update();#dom-appcache-update
  void swapCache();#dom-appcache-swapcache
  
           attribute Function onchecking;#function
           attribute Function onerror;#function
           attribute Function onnoupdate;#function
           attribute Function ondownloading;#function
           attribute Function onprogress;#function
           attribute Function onupdateready;#function
           attribute Function oncached;#function
           attribute Function onobsolete;#function
};
ApplicationCache implements EventTarget;#applicationcache
interface Function {
  any call(in any... arguments);#dom-function-call
};
interface WindowTimers {
  long setTimeout(in any handler, in optional any timeout, in any... args);#dom-windowtimers-settimeout
  void clearTimeout(in long handle);#dom-windowtimers-cleartimeout
  long setInterval(in any handler, in optional any timeout, in any... args);#dom-windowtimers-setinterval
  void clearInterval(in long handle);#dom-windowtimers-clearinterval
};
Window implements WindowTimers;#window
 interface WindowModal {
  readonly attribute any dialogArguments;#dom-windowmodal-dialogarguments
           attribute DOMString returnValue;#dom-windowmodal-returnvalue
};
interface Navigator {
  
};
Navigator implements NavigatorID;#navigator
Navigator implements NavigatorOnLine;#navigator
Navigator implements NavigatorAbilities;#navigator
interface NavigatorID {
  readonly attribute DOMString appName;#dom-navigator-appname
  readonly attribute DOMString appVersion;#dom-navigator-appversion
  readonly attribute DOMString platform;#dom-navigator-platform
  readonly attribute DOMString userAgent;#dom-navigator-useragent
};
interface NavigatorOnLine {
  readonly attribute boolean onLine;#dom-navigator-online
};
interface NavigatorAbilities {
  
  void registerProtocolHandler(in DOMString scheme, in DOMString url, in DOMString title);#dom-navigator-registerprotocolhandler
  void registerContentHandler(in DOMString mimeType, in DOMString url, in DOMString title);#dom-navigator-registercontenthandler
  void yieldForStorageUpdates();#dom-navigator-yieldforstorageupdates
};
interface Selection {
  readonly attribute Node anchorNode;#dom-selection-anchornode
  readonly attribute long anchorOffset;#dom-selection-anchoroffset
  readonly attribute Node focusNode;#dom-selection-focusnode
  readonly attribute long focusOffset;#dom-selection-focusoffset
  readonly attribute boolean isCollapsed;#dom-selection-iscollapsed
  void collapse(in Node parentNode, in long offset);#dom-selection-collapse
  void collapseToStart();#dom-selection-collapsetostart
  void collapseToEnd();#dom-selection-collapsetoend
  void selectAllChildren(in Node parentNode);#dom-selection-selectallchildren
  void deleteFromDocument();#dom-selection-deletefromdocument
  readonly attribute long rangeCount;#dom-selection-rangecount
  Range getRangeAt(in long index);#dom-selection-getrangeat
  void addRange(in Range range);#dom-selection-addrange
  void removeRange(in Range range);#dom-selection-removerange
  void removeAllRanges();#dom-selection-removeallranges
  stringifier DOMString ();#dom-selection-tostring
};
interface DragEvent : MouseEvent {
  readonly attribute DataTransfer dataTransfer;#datatransfer
  void initDragEvent(in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in any dummyArg, in long detailArg, in long screenXArg, in long screenYArg, in long clientXArg, in long clientYArg, in boolean ctrlKeyArg, in boolean altKeyArg, in boolean shiftKeyArg, in boolean metaKeyArg, in unsigned short buttonArg, in EventTarget relatedTargetArg, in DataTransfer dataTransferArg);#dom-dragevent-initdragevent
};
interface DataTransfer {
           attribute DOMString dropEffect;#dom-datatransfer-dropeffect
           attribute DOMString effectAllowed;#dom-datatransfer-effectallowed
  readonly attribute DOMStringList types;#dom-datatransfer-types
  void clearData(in optional DOMString format);#dom-datatransfer-cleardata
  void setData(in DOMString format, in DOMString data);#dom-datatransfer-setdata
  DOMString getData(in DOMString format);#dom-datatransfer-getdata
  readonly attribute FileList files;#dom-datatransfer-files
  void setDragImage(in Element image, in long x, in long y);#dom-datatransfer-setdragimage
  void addElement(in Element element);#dom-datatransfer-addelement
};
interface UndoManager {
  readonly attribute unsigned long length;#dom-undomanager-length
  getter any item(in unsigned long index);#dom-undomanager-item
  readonly attribute unsigned long position;#dom-undomanager-position
  unsigned long add(in any data, in DOMString title);#dom-undomanager-add
  void remove(in unsigned long index);#dom-undomanager-remove
  void clearUndo();#dom-undomanager-clearundo
  void clearRedo();#dom-undomanager-clearredo
};
interface UndoManagerEvent : Event {#event
  readonly attribute any data;#dom-undomanagerevent-data
  void initUndoManagerEvent(in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in any dataArg);#dom-undomanagerevent-initundomanagerevent
};
interface HTMLAppletElement : HTMLElement {#htmlelement
           attribute DOMString align;#dom-applet-align
           attribute DOMString alt;#dom-applet-alt
           attribute DOMString archive;#dom-applet-archive
           attribute DOMString code;#dom-applet-code
           attribute DOMString codeBase;#dom-applet-codebase
           attribute DOMString height;#dom-applet-height
           attribute unsigned long hspace;#dom-applet-hspace
           attribute DOMString name;#dom-applet-name
           attribute DOMString _object; #dom-applet-object
           attribute unsigned long vspace;#dom-applet-vspace
           attribute DOMString width;#dom-applet-width
};
interface HTMLMarqueeElement : HTMLElement {#htmlelement
           attribute DOMString behavior;#dom-marquee-behavior
           attribute DOMString bgColor;#dom-marquee-bgcolor
           attribute DOMString direction;#dom-marquee-direction
           attribute DOMString height;#dom-marquee-height
           attribute unsigned long hspace;#dom-marquee-hspace
           attribute long loop;#dom-marquee-loop
           attribute unsigned long scrollAmount;#dom-marquee-scrollamount
           attribute unsigned long scrollDelay;#dom-marquee-scrolldelay
           attribute DOMString trueSpeed;#dom-marquee-truespeed
           attribute unsigned long vspace;#dom-marquee-vspace
           attribute DOMString width;#dom-marquee-width
           attribute Function onbounce;#function
           attribute Function onfinish;#function
           attribute Function onstart;#function
  void start();#dom-marquee-start
  void stop();#dom-marquee-stop
};
interface HTMLFrameSetElement : HTMLElement {#htmlelement
           attribute DOMString cols;#dom-frameset-cols
           attribute DOMString rows;#dom-frameset-rows
           attribute Function onafterprint;#function
           attribute Function onbeforeprint;#function
           attribute Function onbeforeunload;#function
           attribute Function onblur;#function
           attribute Function onerror;#function
           attribute Function onfocus;#function
           attribute Function onhashchange;#function
           attribute Function onload;#function
           attribute Function onmessage;#function
           attribute Function onoffline;#function
           attribute Function ononline;#function
           attribute Function onpagehide;#function
           attribute Function onpageshow;#function
           attribute Function onpopstate;#function
           attribute Function onredo;#function
           attribute Function onresize;#function
           attribute Function onstorage;#function
           attribute Function onundo;#function
           attribute Function onunload;#function
};
interface HTMLFrameElement : HTMLElement {#htmlelement
           attribute DOMString frameBorder;#dom-frame-frameborder
           attribute DOMString longDesc;#dom-frame-longdesc
           attribute DOMString marginHeight;#dom-frame-marginheight
           attribute DOMString marginWidth;#dom-frame-marginwidth
           attribute DOMString name;#dom-frame-name
           attribute boolean noResize;#dom-frame-noresize
           attribute DOMString scrolling;#dom-frame-scrolling
           attribute DOMString src;#dom-frame-src
  readonly attribute Document contentDocument;#dom-frame-contentdocument
};
interface HTMLAnchorElement {#htmlanchorelement
           attribute DOMString coords;#dom-a-coords
           attribute DOMString charset;#dom-a-charset
           attribute DOMString name;#dom-a-name
           attribute DOMString rev;#dom-a-rev
           attribute DOMString shape;#dom-a-shape
};
interface HTMLAreaElement {#htmlareaelement
           attribute boolean noHref;#dom-area-nohref
};
interface HTMLBaseFontElement : HTMLElement {#htmlelement
           attribute DOMString color;#dom-basefont-color
           attribute DOMString face;#dom-basefont-face
           attribute long size; #dom-basefont-size
};
interface HTMLBodyElement {#htmlbodyelement
           attribute DOMString text;#dom-body-text
           attribute DOMString bgColor;#dom-body-bgcolor
           attribute DOMString background;#dom-body-background
           attribute DOMString link;#dom-body-link
           attribute DOMString vLink;#dom-body-vlink
           attribute DOMString aLink;#dom-body-alink
};
interface HTMLBRElement {#htmlbrelement
           attribute DOMString clear;#dom-br-clear
};
interface HTMLTableCaptionElement {#htmltablecaptionelement
           attribute DOMString align;#dom-caption-align
};
interface HTMLTableColElement {#htmltablecolelement
           attribute DOMString align;#dom-col-align
           attribute DOMString ch;#dom-col-ch
           attribute DOMString chOff;#dom-col-choff
           attribute DOMString vAlign;#dom-col-valign
           attribute DOMString width;#dom-col-width
};
interface HTMLDirectoryElement : HTMLElement {#htmlelement
           attribute boolean compact;#dom-dir-compact
};
interface HTMLDivElement {#htmldivelement
           attribute DOMString align;#dom-div-align
};
interface HTMLDListElement {#htmldlistelement
           attribute boolean compact;#dom-dl-compact
};
interface HTMLEmbedElement {#htmlembedelement
           attribute DOMString align;#dom-embed-align
           attribute DOMString name;#dom-embed-name
};
interface HTMLFontElement : HTMLElement {#htmlelement
           attribute DOMString color;#dom-font-color
           attribute DOMString face;#dom-font-face
           attribute DOMString size; #dom-font-size
};
interface HTMLHeadingElement {#htmlheadingelement
           attribute DOMString align;#dom-hx-align
};
interface HTMLHRElement {#htmlhrelement
           attribute DOMString align;#dom-hr-align
           attribute DOMString color;#dom-hr-color
           attribute boolean noShade;#dom-hr-noshade
           attribute DOMString size;#dom-hr-size
           attribute DOMString width;#dom-hr-width
};
interface HTMLHtmlElement {#htmlhtmlelement
           attribute DOMString version;#dom-html-version
};
interface HTMLIFrameElement {#htmliframeelement
           attribute DOMString align;#dom-iframe-align
           attribute DOMString frameBorder;#dom-iframe-frameborder
           attribute DOMString longDesc;#dom-iframe-longdesc
           attribute DOMString marginHeight;#dom-iframe-marginheight
           attribute DOMString marginWidth;#dom-iframe-marginwidth
           attribute DOMString scrolling;#dom-iframe-scrolling
};
interface HTMLImageElement {#htmlimageelement
           attribute DOMString name;#dom-img-name
           attribute DOMString align;#dom-img-align
           attribute DOMString border;#dom-img-border
           attribute unsigned long hspace;#dom-img-hspace
           attribute DOMString longDesc;#dom-img-longdesc
           attribute unsigned long vspace;#dom-img-vspace
};
interface HTMLInputElement {#htmlinputelement
           attribute DOMString align;#dom-input-align
           attribute DOMString useMap;#dom-input-usemap
};
interface HTMLLegendElement {#htmllegendelement
           attribute DOMString align;#dom-legend-align
};
interface HTMLLIElement {#htmllielement
           attribute DOMString type;#dom-li-type
};
interface HTMLLinkElement {#htmllinkelement
           attribute DOMString charset;#dom-link-charset
           attribute DOMString rev;#dom-link-rev
           attribute DOMString target;#dom-link-target
};
interface HTMLMenuElement {#htmlmenuelement
           attribute boolean compact;#dom-menu-compact
};
interface HTMLMetaElement {#htmlmetaelement
           attribute DOMString scheme;#dom-meta-scheme
};
interface HTMLObjectElement {#htmlobjectelement
           attribute DOMString align;#dom-object-align
           attribute DOMString archive;#dom-object-archive
           attribute DOMString border;#dom-object-border
           attribute DOMString code;#dom-object-code
           attribute DOMString codeBase;#dom-object-codebase
           attribute DOMString codeType;#dom-object-codetype
           attribute boolean declare;#dom-object-declare
           attribute unsigned long hspace;#dom-object-hspace
           attribute DOMString standby;#dom-object-standby
           attribute unsigned long vspace;#dom-object-vspace
};
interface HTMLOListElement {#htmlolistelement
           attribute boolean compact;#dom-ol-compact
           attribute DOMString type;#dom-ol-type
};
interface HTMLParagraphElement {#htmlparagraphelement
           attribute DOMString align;#dom-p-align
};
interface HTMLParamElement {#htmlparamelement
           attribute DOMString type;#dom-param-type
           attribute DOMString valueType;#dom-param-valuetype
};
interface HTMLPreElement {#htmlpreelement
           attribute unsigned long width;#dom-pre-width
};
interface HTMLScriptElement {#htmlscriptelement
           attribute DOMString event;#dom-script-event
           attribute DOMString htmlFor;#dom-script-htmlfor
};
interface HTMLTableElement {#htmltableelement
           attribute DOMString align;#dom-table-align
           attribute DOMString bgColor;#dom-table-bgcolor
           attribute DOMString border;#dom-table-border
           attribute DOMString cellPadding;#dom-table-cellpadding
           attribute DOMString cellSpacing;#dom-table-cellspacing
           attribute DOMString frame;#dom-table-frame
           attribute DOMString rules;#dom-table-rules
           attribute DOMString width;#dom-table-width
};
interface HTMLTableSectionElement {#htmltablesectionelement
           attribute DOMString align;#dom-tbody-align
           attribute DOMString ch;#dom-tbody-ch
           attribute DOMString chOff;#dom-tbody-choff
           attribute DOMString vAlign;#dom-tbody-valign
};
interface HTMLTableCellElement {#htmltablecellelement
           attribute DOMString abbr;#dom-tdth-abbr
           attribute DOMString align;#dom-tdth-align
           attribute DOMString axis;#dom-tdth-axis
           attribute DOMString bgColor;#dom-tdth-bgcolor
           attribute DOMString ch;#dom-tdth-ch
           attribute DOMString chOff;#dom-tdth-choff
           attribute DOMString height;#dom-tdth-height
           attribute boolean noWrap;#dom-tdth-nowrap
           attribute DOMString vAlign;#dom-tdth-valign
           attribute DOMString width;#dom-tdth-width
};
interface HTMLTableRowElement {#htmltablerowelement
           attribute DOMString align;#dom-tr-align
           attribute DOMString bgColor;#dom-tr-bgcolor
           attribute DOMString ch;#dom-tr-ch
           attribute DOMString chOff;#dom-tr-choff
           attribute DOMString vAlign;#dom-tr-valign
};
interface HTMLUListElement {#htmlulistelement
           attribute boolean compact;#dom-ul-compact
           attribute DOMString type;#dom-ul-type
};
interface HTMLDocument {#htmldocument
           attribute DOMString fgColor;#dom-document-fgcolor
           attribute DOMString bgColor;#dom-document-bgcolor
           attribute DOMString linkColor;#dom-document-linkcolor
           attribute DOMString vlinkColor;#dom-document-vlinkcolor
           attribute DOMString alinkColor;#dom-document-alinkcolor
  readonly attribute HTMLCollection anchors;#htmlcollection
  readonly attribute HTMLCollection applets;#htmlcollection
  void clear();#dom-document-clear
  readonly attribute HTMLAllCollection all;#htmlallcollection
};
